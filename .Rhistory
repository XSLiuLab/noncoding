library(data.table)
cancer_type = c("blood", "breast", "esophagus",
"kidney", "liver", "lung",
"ovary", "pancreas", "melanoma")
i = cancer_type[1]
file_names <- list.files(pattern = paste0(i, ".RData"))
file_names
for (fl in file_names) {
load(fl)
}
mut$pred <- as.numeric(predict.glm(prei, type = "response", newdata = mut))
head(mut)
gc()
modify_tfbs = function(proj_file) {
library(data.table)
message("Modifying tfbs column in ", proj_file, "...")
dt = fread(proj_file)
dist_dt = fread("dist2tfbs_for_logistic_input.bed", header = FALSE)
dist_dt = dist_dt[, .(V1, V3, V7)]
# Assign the max distance to 100
dist_dt$V7[dist_dt$V7 > 100] = 100
# Assign score to 0-100
dist_dt$score = 100 - dist_dt$V7
dist_dt = unique(dist_dt)
dist_dt$V7 = NULL
dt_update = merge(dt, dist_dt,
by = c("V1", "V3"), all.x = TRUE)
dt_update$V9 = dt_update$score
dt_update$score = NULL
## Correct the order
dt_update = dt_update[, c(1, 3, 2, 4:ncol(dt_update)), with = F]
message("Done. Outputting result file.")
result_file = paste0("update_", basename(proj_file))
fwrite(dt_update,
file = result_file,
col.names = TRUE, sep = "\t")
gc()
return(result_file)
}
library(stringr)
library(pROC)
library(caret)
library(data.table)
source("logit_function20181112.R")
type_list = list(
lung = c("LUSC-CN", "LUSC-KR", "mock"),
esophagus = c("ESAD-UK","ESCA-CN","mock"),
liver = c("LIAD-FR", "LICA-CN", "LICA-FR", "LINC-JP", "LIRI-JP","mock"),
breast = c("BRCA-EU","BRCA-FR","BRCA-US","mock"),
pancreas = c("PACA-AU","PACA-CA","PAEN-AU","PAEN-IT","mock"),
kidney = c("RECA-EU","mock"),
blood = c("ALL-US","CLLE-ES","MALY-DE","NKTL-SG","mock"),
ovary = c("OV-AU","mock"),
melanoma = c("MELA-AU","SKCA-BR","SKCM-US","mock")
)
file_list = list(
v1 = "/home/zhangjing/roadmap/lung/bed/cal_model_lung_final_result.tsv",
v2 = "/home/zhangjing/roadmap/Esophagus/bed/cal_model_esophagus_final_result.tsv",
v3 = "/home/zhangjing/roadmap/liver/bed/cal_model_liver_final_result.tsv",
v4 = "/home/zhangjing/roadmap/breast/bed/cal_model_breast_final_result.tsv",
v5 = "/home/zhangjing/roadmap/Pancreas/bed/cal_model_pancreas_final_result.tsv",
v6 = "/home/zhangjing/roadmap/Kidney/bed/cal_model_kidney_final_result.tsv",
v7 = "/home/zhangjing/roadmap/blood/bed/cal_model_blood_final_result.tsv",
v8 = "/home/zhangjing/roadmap/Ovary/bed/cal_model_ovary_final_result.tsv",
v9 = "/home/zhangjing/roadmap/E061_Melanoma/bed/cal_model_mela_final_result.tsv"
)
names(file_list) = names(type_list)
call_model = function(proj_index) {
timer <- Sys.time()
message("Calling model for cancer type: ", proj_index)
result_file = paste0("logit_", proj_index, ".RData")
#if (file.exists(result_file)) {
#   message("The result has been called!")
#   return(NULL)
# }
modified_file = modify_tfbs(file_list[[proj_index]])
mut <- logit_form(type_list[[proj_index]], modified_file)
if (proj_index %in% c("breast", "pancreas", "kidney", "ovary", "melanoma")) {
## Add dnase data
dnase_file = switch(
proj_index,
breast = "/home/zhangjing/roadmap/breast/bed/E028-DNase.hotspot.broad.bed",
pancreas = "/home/zhangjing/roadmap/Pancreas/bed/E098-DNase.hotspot.broad.bed",
kidney = "/home/zhangjing/roadmap/Kidney/bed/E086-DNase.hotspot.broad.bed",
ovary = "/home/zhangjing/roadmap/Ovary/bed/E097-DNase.hotspot.broad.bed",
melanoma = "/home/zhangjing/roadmap/E061_Melanoma/bed/E059-DNase.hotspot.broad.bed"
)
message("Adding dnase data...")
mut <- add_dnase(mut, dnase_file)
}
loc_info = mut[, c(1:4)]
save(loc_info, file = paste0("logit_loc_", proj_index, ".RData"))
mut <- format_trans(mut)
save(mut, file = paste0("logit_input_", proj_index, ".RData"))
file.remove(modified_file)
#cross_val(mut, result_file)
if (file.exists(result_file)) {
message("The result has been called!")
return(NULL)
}
cross_val(mut, result_file)
message("Done")
gc()
#file.remove(modified_file)
message(Sys.time() - timer)
}
cancer_type = c("blood", "breast", "esophagus",
"kidney", "liver", "lung",
"ovary", "pancreas", "melanoma")
i = "blood"
debug(call_model)
call_model(i)
head(mut)
all(mut$end - mut$start == 1)
call_model = function(proj_index) {
timer <- Sys.time()
message("Calling model for cancer type: ", proj_index)
result_file = paste0("logit_", proj_index, ".RData")
#if (file.exists(result_file)) {
#   message("The result has been called!")
#   return(NULL)
# }
modified_file = modify_tfbs(file_list[[proj_index]])
mut <- logit_form(type_list[[proj_index]], modified_file)
if (proj_index %in% c("breast", "pancreas", "kidney", "ovary", "melanoma")) {
## Add dnase data
dnase_file = switch(
proj_index,
breast = "/home/zhangjing/roadmap/breast/bed/E028-DNase.hotspot.broad.bed",
pancreas = "/home/zhangjing/roadmap/Pancreas/bed/E098-DNase.hotspot.broad.bed",
kidney = "/home/zhangjing/roadmap/Kidney/bed/E086-DNase.hotspot.broad.bed",
ovary = "/home/zhangjing/roadmap/Ovary/bed/E097-DNase.hotspot.broad.bed",
melanoma = "/home/zhangjing/roadmap/E061_Melanoma/bed/E059-DNase.hotspot.broad.bed"
)
message("Adding dnase data...")
mut <- add_dnase(mut, dnase_file)
}
loc_info = mut[, c("donor", "chr", "end")]
save(loc_info, file = paste0("logit_loc_", proj_index, ".RData"))
mut <- format_trans(mut)
save(mut, file = paste0("logit_input_", proj_index, ".RData"))
file.remove(modified_file)
#cross_val(mut, result_file)
if (file.exists(result_file)) {
message("The result has been called!")
return(NULL)
}
cross_val(mut, result_file)
message("Done")
gc()
#file.remove(modified_file)
message(Sys.time() - timer)
}
i = cancer_type[2]
debug(call_model)
call_model(i)
head(mut)
head(mut)
call_model(i)
debug(add_dnase)
df
ncol(mtcars)
c(2:ncol(mtcars), 1)
gc()
install.packages("butcher")
library(data.table)
cancer_type = c("blood", "breast", "esophagus",
"kidney", "liver", "lung",
"ovary", "pancreas", "melanoma")
i = cancer_type[1]
file_names <- list.files(pattern = paste0(i, ".RData"))
for (fl in file_names) {
load(fl)
}
head(loc_info)
head(mut)
"mock" %in% loc_info$donor
loc_info$pred <- as.numeric(predict.glm(prei, type = "response", newdata = mut))
head(loc_info$pred)
head(loc_info)
fwrite(loc_info, file = paste0("pred_", i, ".tsv.gz"), sep = "\t")
library(data.table)
cancer_type = c("blood", "breast", "esophagus",
"kidney", "liver", "lung",
"ovary", "pancreas", "melanoma")
i = cancer_type[2]
message("Processing ", i, "...")
file_names <- list.files(pattern = paste0(i, ".RData"))
for (fl in file_names) {
load(fl)
}
head(mut)
file_names
head(prei$data)
head(prei$data)
dim(prei$data)
dim(mut)
head(prei$data)
head(mut)
head(loc_info)
gc()
modify_tfbs = function(proj_file) {
library(data.table)
message("Modifying tfbs column in ", proj_file, "...")
dt = fread(proj_file)
dist_dt = fread("dist2tfbs_for_logistic_input.bed", header = FALSE)
dist_dt = dist_dt[, .(V1, V3, V7)]
# Assign the max distance to 100
dist_dt$V7[dist_dt$V7 > 100] = 100
# Assign score to 0-100
dist_dt$score = 100 - dist_dt$V7
dist_dt = unique(dist_dt)
dist_dt$V7 = NULL
dt_update = merge(dt, dist_dt,
by = c("V1", "V3"), all.x = TRUE)
dt_update$V9 = dt_update$score
dt_update$score = NULL
## Correct the order
dt_update = dt_update[, c(1, 3, 2, 4:ncol(dt_update)), with = F]
message("Done. Outputting result file.")
result_file = paste0("update_", basename(proj_file))
fwrite(dt_update,
file = result_file,
col.names = TRUE, sep = "\t")
gc()
return(result_file)
}
library(stringr)
library(pROC)
library(caret)
library(data.table)
source("logit_function20181112.R")
type_list = list(
lung = c("LUSC-CN", "LUSC-KR", "mock"),
esophagus = c("ESAD-UK","ESCA-CN","mock"),
liver = c("LIAD-FR", "LICA-CN", "LICA-FR", "LINC-JP", "LIRI-JP","mock"),
breast = c("BRCA-EU","BRCA-FR","BRCA-US","mock"),
pancreas = c("PACA-AU","PACA-CA","PAEN-AU","PAEN-IT","mock"),
kidney = c("RECA-EU","mock"),
blood = c("ALL-US","CLLE-ES","MALY-DE","NKTL-SG","mock"),
ovary = c("OV-AU","mock"),
melanoma = c("MELA-AU","SKCA-BR","SKCM-US","mock")
)
file_list = list(
v1 = "/home/zhangjing/roadmap/lung/bed/cal_model_lung_final_result.tsv",
v2 = "/home/zhangjing/roadmap/Esophagus/bed/cal_model_esophagus_final_result.tsv",
v3 = "/home/zhangjing/roadmap/liver/bed/cal_model_liver_final_result.tsv",
v4 = "/home/zhangjing/roadmap/breast/bed/cal_model_breast_final_result.tsv",
v5 = "/home/zhangjing/roadmap/Pancreas/bed/cal_model_pancreas_final_result.tsv",
v6 = "/home/zhangjing/roadmap/Kidney/bed/cal_model_kidney_final_result.tsv",
v7 = "/home/zhangjing/roadmap/blood/bed/cal_model_blood_final_result.tsv",
v8 = "/home/zhangjing/roadmap/Ovary/bed/cal_model_ovary_final_result.tsv",
v9 = "/home/zhangjing/roadmap/E061_Melanoma/bed/cal_model_mela_final_result.tsv"
)
names(file_list) = names(type_list)
call_model = function(proj_index) {
timer <- Sys.time()
message("Calling model for cancer type: ", proj_index)
result_file = paste0("logit_", proj_index, ".RData")
#if (file.exists(result_file)) {
#   message("The result has been called!")
#   return(NULL)
# }
modified_file = modify_tfbs(file_list[[proj_index]])
mut <- logit_form(type_list[[proj_index]], modified_file)
if (proj_index %in% c("breast", "pancreas", "kidney", "ovary", "melanoma")) {
## Add dnase data
dnase_file = switch(
proj_index,
breast = "/home/zhangjing/roadmap/breast/bed/E028-DNase.hotspot.broad.bed",
pancreas = "/home/zhangjing/roadmap/Pancreas/bed/E098-DNase.hotspot.broad.bed",
kidney = "/home/zhangjing/roadmap/Kidney/bed/E086-DNase.hotspot.broad.bed",
ovary = "/home/zhangjing/roadmap/Ovary/bed/E097-DNase.hotspot.broad.bed",
melanoma = "/home/zhangjing/roadmap/E061_Melanoma/bed/E059-DNase.hotspot.broad.bed"
)
message("Adding dnase data...")
mut <- add_dnase(mut, dnase_file)
}
loc_info = mut[, c("donor", "chr", "end")]
save(loc_info, file = paste0("logit_loc_", proj_index, ".RData"))
mut <- format_trans(mut)
save(mut, file = paste0("logit_input_", proj_index, ".RData"))
file.remove(modified_file)
#cross_val(mut, result_file)
if (file.exists(result_file)) {
message("The result has been called!")
return(NULL)
}
cross_val(mut, result_file)
message("Done")
gc()
#file.remove(modified_file)
message(Sys.time() - timer)
}
cancer_type = c("blood", "breast", "esophagus",
"kidney", "liver", "lung",
"ovary", "pancreas", "melanoma")
i = cancer_type[2]
debug(call_model)
call_model(i)
head(mut)
debug(add_dnase)
head(df)
df_names
head(df)
format_trans
